name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  KIWI_SERVICE_URL: http://localhost:3000
  WINK_SERVICE_URL: http://localhost:3001
  NODE_ENV: test
  KIWI_IMAGE_NAME: kiwi-service
  WINK_IMAGE_NAME: wink-service

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Kiwi Service
        run: |
          docker build -t ${{ env.KIWI_IMAGE_NAME }}:latest -f docker/kiwi/Dockerfile .
          echo "Built kiwi-service image"
          docker images

      - name: Build Wink Service
        run: |
          docker build -t ${{ env.WINK_IMAGE_NAME }}:latest -f docker/wink/Dockerfile .
          echo "Built wink-service image"
          docker images

      - name: Start Services
        run: |
          docker run -d --name kiwi-service -p 3000:3000 ${{ env.KIWI_IMAGE_NAME }}:latest
          docker run -d --name wink-service -p 3001:3001 ${{ env.WINK_IMAGE_NAME }}:latest
          echo "Started services"
          docker ps

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './tests/package-lock.json'
      
      - name: View Service Logs
        run: |
          echo "Kiwi Service Logs:"
          docker logs kiwi-service || true
          echo "Wink Service Logs:"
          docker logs wink-service || true
      
      - name: Create Test Results Directory
        run: |
          mkdir -p ./tests/test-results
          chmod -R 777 ./tests/test-results

      - name: Install Dependencies
        working-directory: ./tests
        run: npm ci
      
      - name: Wait for services
        run: |
          echo "Waiting for kiwi-service..."
          timeout 90s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000/health)" != "200" ]]; do echo "Waiting for kiwi-service..."; sleep 5; done' || exit 1
          echo "Waiting for wink-service..."
          timeout 90s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3001/health)" != "200" ]]; do echo "Waiting for wink-service..."; sleep 5; done' || exit 1
      
      - name: Run Integration Tests
        working-directory: ./tests
        run: |
          npm run test:integration || true
          find . -name "*.xml" -exec cp {} test-results/ \;
        env:
          KIWI_SERVICE_URL: http://localhost:3000
          WINK_SERVICE_URL: http://localhost:3001
      
      - name: Run Unit Tests
        working-directory: ./tests
        run: |
          npm run test:unit || true
          find . -name "*.xml" -exec cp {} test-results/ \;

      - name: List Test Results
        run: |
          echo "Test Results Directory Contents:"
          ls -la ./tests/test-results/

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./tests/test-results/
          if-no-files-found: warn 